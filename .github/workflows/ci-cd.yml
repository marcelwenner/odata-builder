name: CI/CD Workflow

on:
    push:
        tags:
            - 'v*' # Nur bei Tag-Pushes (z. B. v0.6.1)
        branches:
            - '**' # Für Tests und Builds bei jedem Push
    pull_request: # Für Tests und Builds bei Pull Requests
    workflow_dispatch: # Manueller Start möglich

jobs:
    test-and-build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Use Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '20'

            - name: Install dependencies
              run: npm ci

            - name: Test
              run: npm test

            - name: Lint
              run: npm run lint

            - name: Build
              run: npm run build

            - name: Prepare package for npm
              run: |
                  cp package.json dist/package.json
                  cp README.md dist/README.md
                  cd dist
                  jq '.main = "odata-builder.js"' package.json > tmp.json && mv tmp.json package.json
                  jq '.module = "odata-builder.esm.js"' package.json > tmp.json && mv tmp.json package.json
                  jq '.types = "odata-builder.d.ts"' package.json > tmp.json && mv tmp.json package.json

            - name: Check if dist directory is empty
              id: check-dist
              run: |
                  if [ -z "$(ls -A dist/)" ]; then
                    echo "No files found in dist directory, failing the job."
                    exit 1
                  fi

            - name: Archive build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: dist-${{ github.run_id }}
                  path: dist/

    create-release:
        needs: [test-and-build]
        if: startsWith(github.ref, 'refs/tags/')
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Generate release notes
              id: release-notes
              run: |
                  PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^)
                  git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s" > release-notes.md

            - name: Create GitHub Release
              uses: actions/create-release@v1
              with:
                  tag_name: ${{ github.ref_name }}
                  release_name: ${{ github.ref_name }}
                  body_path: ./release-notes.md
                  draft: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    request-approval:
        needs: [create-release]
        runs-on: ubuntu-latest
        environment:
            name: production
        steps:
            - name: Wait for approval
              run: echo "Approval required to proceed to the next job. Check the artifacts and approve if everything is okay."

    # Veröffentlichung auf npm
    publish:
        needs: [request-approval]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Download build artifacts
              uses: actions/download-artifact@v4
              with:
                  pattern: dist-*
                  path: dist/

            - name: Use Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '20'
                  registry-url: 'https://registry.npmjs.org'

            - name: Publish to NPM
              run: cd dist && npm publish
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
